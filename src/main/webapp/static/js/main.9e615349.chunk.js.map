{"version":3,"sources":["logo.svg","services/UserServices.js","components/CartCardComponent.js","components/CartGridComponent.js","components/ListingsCardComponent.js","components/ListingsGridComponent.js","services/ListingServices.js","containers/ListingsPageContainer.js","components/HomeGridComponent.js","components/HomeComponent.js","services/SearchServices.js","components/DetailsRowComponent.js","components/SearchCardComponent.js","components/DetailsTableComponent.js","containers/DetailsPageContainer.js","components/SearchGridComponent.js","containers/SearchPageContainer.js","components/ApiClientComponent.js","services/SellerServices.js","components/LoginComponent.js","services/BuyerServices.js","components/RegisterComponet.js","components/ProfileComponent.js","components/CartComponent.js","components/StoreCardComponent.js","components/StoreGridComponent.js","components/StoreComponent.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","username","password","userType","fetch","body","JSON","stringify","headers","method","credentials","then","response","json","catch","fname","lname","email","userId","f_name","l_name","CartCardComponent","state","listing","props","className","this","l_category","l_price","l_quantity","onClick","deleteListing","React","Component","CartGridComponent","map","key","id","ListingsCardComponent","e","console","log","target","ListingsGridComponent","category","listings","name","price","quantity","ListingsPageContainer","match","params","ListingServices","setState","prevProps","prevState","snapshot","layout","styles","display","style","flexDirection","to","HomeGridComponent","HomeComponent","currentUser","UserServices","keyword","productId","DetailsRowComponent","product","src","imageUrl","title","rating","totalReviews","href","detailPageURL","SearchCardComponent","ASIN","DetailsTableComponent","DetailsPageContainer","SearchServices","actualProduct","SearchGridComponent","products","SearchPageContainer","updateKeyWord","newWord","searchProducts","actualProducts","placeholder","onChange","event","value","ApiClientComponent","LoginComponent","error","updateUsername","updatePassword","login","history","push","htmlFor","type","aria-describedby","RegisterComponent","user","updateType","newType","register","assignUser","BuyerServices","SellerServices","ProfileComponent","firstName","lastName","updateFirstName","updateLastName","updateEmail","update","logout","CartComponent","StoreCardComponent","StoreComponent","listingToDelete","status","filter","updatel_category","updatel_name","updatel_price","updatel_quantity","createListing","HomePage","path","exact","component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9e615349.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const findUserById = (uid) =>\r\n    fetch(`http://localhost:8080/users/${uid}`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\nconst register = (username, password, userType) =>\r\n    fetch(\"http://localhost:8080/api/register\", {\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n            userType: userType\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\nconst login = (username, password) =>\r\n    fetch(\"http://localhost:8080/api/login\", {\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\nconst fetchProfile = (username, password) =>\r\n    fetch(`http://localhost:8080/api/profile`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\n\r\n\r\nconst logout = () =>\r\n    fetch(`http://localhost:8080/api/logout`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).catch(response => response.json())\r\n\r\nconst updateUser = (username, password, fname, lname, email, userType, userId) => {\r\n    fetch(`http://localhost:8080/api/profile/${userId}` , {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n            f_name: fname,\r\n            l_name: lname,\r\n            email: email,\r\n            userType: userType\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n    findUserById,\r\n    register,\r\n    fetchProfile,\r\n    login,\r\n    logout,\r\n    updateUser\r\n}","import React from \"react\";\r\n\r\n\r\nexport default class CartCardComponent extends React.Component {\r\n\r\n    state = {\r\n        listing: this.props.listing\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div>Category: {this.state.listing.l_category}</div>\r\n                    <div>Name: {this.state.listing.l_name}</div>\r\n                    <div>Price: {this.state.listing.l_price}</div>\r\n                    <div>Quantity: {this.state.listing.l_quantity}</div>\r\n                    <button\r\n                        onClick={() => this.props.deleteListing(this.state.listing)}\r\n                        className=\"btn btn-primary btn-sm\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import CartCardComponent from \"./CartCardComponent\";\r\nimport  React from \"react\";\r\n\r\nexport default class CartGridComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table searchResultTable\">\r\n                    <thead className=\"searchResultHeader\">\r\n                    <tr>\r\n                        <td>Current Cart</td>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.listing.map(listing =>\r\n                            <div key={listing.id}\r\n                                 className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <CartCardComponent\r\n                                    listing={listing}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CartGridComponent from \"./CartGridComponent\";\r\n\r\nexport default class ListingsCardComponent extends React.Component {\r\n\r\n    state = {\r\n        listing: this.props.listing\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div>Category: {this.state.listing.l_category}</div>\r\n                    <div>Name: {this.state.listing.l_name}</div>\r\n                    <div>Price: {this.state.listing.l_price}</div>\r\n                    <div>Quantity: {this.state.listing.l_quantity}</div>\r\n                    <button\r\n                        onClick={(e) => console.log(e.target)}\r\n                        className=\"btn btn-primary btn-sm\">\r\n                        Add to Cart\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport ListingsCardComponent from \"./ListingsCardComponent\";\r\n\r\n\r\nexport default class ListingsGridComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table searchResultTable\">\r\n                    <thead className=\"searchResultHeader\">\r\n                    <tr>\r\n                        <td className=\"listingHeader\">{this.props.category} listings</td>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.listings.map(listing =>\r\n                            <div key={listing.id}\r\n                                 className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <ListingsCardComponent\r\n                                    listing={listing}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","const createListing = (category, name, price, quantity) =>\r\n    fetch(\"http://localhost:8080/api/listing\", {\r\n        body: JSON.stringify({\r\n            l_category: category,\r\n            l_name: name,\r\n            l_price: price,\r\n            l_quantity: quantity\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        method: 'POST'\r\n    }).then(response => response.json())\r\n\r\nconst findAllListingsByCategory = (category) =>\r\n    fetch(\"http://localhost:8080/api/listings/\" + category)\r\n        .then(response => response.json())\r\n\r\nconst deleteListing = (listing) =>\r\n    fetch(`http://localhost:8080/api/listings/${listing.id}` , {\r\n        method: 'DELETE'\r\n    }).then(response => response.json())\r\n\r\nconst findAllListings = () =>\r\n    fetch(\"http://localhost:8080/api/listings\").then(response => response.json())\r\n\r\nexport default {\r\n    createListing,\r\n    deleteListing,\r\n    findAllListingsByCategory,\r\n    findAllListings\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ListingsGridComponent from \"../components/ListingsGridComponent\";\r\nimport ListingServices from \"../services/ListingServices\";\r\n\r\n\r\n\r\nexport default class ListingsPageContainer extends React.Component {\r\n\r\n    state = {\r\n        listings: [],\r\n        category: this.props.match.params.category,\r\n    }\r\n\r\n    componentDidMount() {\r\n        ListingServices.findAllListingsByCategory(this.state.category)\r\n            .then(listings => this.setState({\r\n                listings: listings\r\n            }))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.match.params.category !== this.props.match.params.category) {\r\n            this.setState({\r\n                layout: this.props.match.params.category\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"listingPageHead\">\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Listings Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <li>\r\n                                <Link className=\"nav-link listingSearch\" to=\"/search\">Search</Link>\r\n                            </li>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <ListingsGridComponent\r\n                        category={this.state.category}\r\n                        listings={this.state.listings}/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport ListingServices from \"../services/ListingServices\";\r\nimport ListingsCardComponent from \"./ListingsCardComponent\";\r\n\r\n\r\nexport default class HomeGridComponent extends React.Component{\r\n    state = {\r\n        listings: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        ListingServices.findAllListings()\r\n            .then(listings => this.setState({\r\n                listings: listings\r\n            }))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <table className=\"table  homeGrid\">\r\n                    <thead className=\"searchResultHeader\">\r\n                    <tr>\r\n                        <td className=\"listingHeader\">Listings</td>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.state.listings.map(listing =>\r\n                            <div key={listing.id}\r\n                                 className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <ListingsCardComponent\r\n                                    listing={listing}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserServices from \"../services/UserServices\";\r\nimport ListingsPageContainer from \"../containers/ListingsPageContainer\";\r\nimport HomeGridComponent from \"./HomeGridComponent\";\r\n\r\nexport default class HomeComponent extends React.Component {\r\n\r\n    state = {\r\n        currentUser: {\r\n            username: '',\r\n            userType: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserServices.fetchProfile()\r\n            .catch(e => {})\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.setState({currentUser: currentUser})\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <nav className=\"navbar fixed-top navbar-dark bg-dark\">\r\n                        <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                            <li>\r\n                                <Link className=\"nav-link homeLogin\" to=\"/login\">Login</Link>\r\n                            </li>\r\n                            <li className=\"loginDivider\">/</li>\r\n                            <li>\r\n                                <Link className=\"nav-link homeRegister\" to=\"/register\">Register</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"navbar-brand mx-auto mainTitle\">\r\n                            <h3>Student MarketPlace</h3>\r\n                        </div>\r\n                        {\r\n                            this.state.currentUser.username &&\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link homeSearch\" to=\"/profile\">Profile</Link>\r\n                                </li>\r\n                                {\r\n                                    this.state.currentUser.userType === 'seller' &&\r\n                                    <li className=\"profileDivider\">/</li>\r\n                                }\r\n                                {\r\n                                    this.state.currentUser.userType === 'seller' &&\r\n                                        <li>\r\n                                            <Link className=\"nav-link homeStore\" to=\"/store\">Store</Link>\r\n                                        </li>\r\n\r\n                                }\r\n                                {\r\n                                    this.state.currentUser.userType === 'buyer' &&\r\n                                    <li className=\"profileDivider\">/</li>\r\n                                }\r\n                                {\r\n                                    this.state.currentUser.userType === 'buyer' &&\r\n                                    <li>\r\n                                        <Link className=\"nav-link homeRegister\" to=\"/cart\">Cart</Link>\r\n                                    </li>\r\n                                }\r\n                            </ul>\r\n                        }\r\n                    </nav>\r\n                </div>\r\n                <div>\r\n                    <nav className=\"navbar navbar-dark bg-secondary homePageNav\">\r\n                        <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                            <li>\r\n                                <h3 className=\"homeCategory\">Categories</h3>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"nav-link homeLink\" to=\"/products/listings\">Products</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"nav-link homeLink\" to=\"/books/listings\">Books</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"nav-link homeLink\" to=\"/services/listings\">Services</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"nav-link homeLink\" to=\"/housing/listings\">Housing</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar nav ml-auto\">\r\n                            <li>\r\n                                <Link className=\"nav-link homeSearchLink\" to=\"/search\">Search</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                <div>\r\n                    <HomeGridComponent/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","\r\nconst findProductsByKeyWord = (keyword) =>\r\n    fetch(\"https://amazon-price1.p.rapidapi.com/search?keywords=\" + keyword + \"&marketplace=US\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-host\": \"amazon-price1.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"7928a2dcbfmsh5d89e8852c7289fp10f848jsnf45f27536d87\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst findProductById = (productId) =>\r\n    fetch(\"https://amazon-price1.p.rapidapi.com/search?keywords=\" + productId + \"&marketplace=US\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-host\": \"amazon-price1.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"7928a2dcbfmsh5d89e8852c7289fp10f848jsnf45f27536d87\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    findProductsByKeyWord,\r\n    findProductById\r\n}","import React from \"react\";\r\n\r\nexport default class DetailsRowComponent extends React.Component {\r\n\r\n    state = {\r\n        product: this.props.product\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n           <tr className=\"detailsRow\">\r\n               <td><img className=\"card-img-top\" src={this.state.product.imageUrl}/></td>\r\n               <td>{this.state.product.title}</td>\r\n               <td>{this.state.product.price}</td>\r\n               <td>{this.state.product.rating}</td>\r\n               <td>{this.state.product.totalReviews}</td>\r\n               <td><a href={`${this.state.product.detailPageURL}`}>Link</a></td>\r\n           </tr>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class SearchCardComponent extends React.Component {\r\n\r\n    state = {\r\n        product: this.props.product\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\">\r\n                <img className=\"card-img-top\" src={this.state.product.imageUrl}/>\r\n                <div className=\"card-body\">\r\n                    <div>{this.state.product.title}</div>\r\n                    <div>{this.state.product.price}</div>\r\n                    <Link to={`/details/${this.state.product.ASIN}`}>\r\n                    <button\r\n                        className=\"btn btn-primary btn-sm\">\r\n                        More Details\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport DetailsRowComponent from \"./DetailsRowComponent\";\r\nimport SearchCardComponent from \"./SearchCardComponent\";\r\n\r\nexport default class DetailsTableComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table detailsTable\">\r\n                    <thead className=\"detailsTableHeader\">\r\n                        <tr>\r\n                            <td>Image</td>\r\n                            <td>Title</td>\r\n                            <td>Price</td>\r\n                            <td>Rating</td>\r\n                            <td>Total Reviews</td>\r\n                            <td>Link To Product</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.props.product.map(product =>\r\n                                <DetailsRowComponent\r\n                                    product={product}\r\n                                    key={this.props.product.ASIN}\r\n                                />\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport SearchServices from \"../services/SearchServices\";\r\nimport {Link} from \"react-router-dom\";\r\nimport DetailsTableComponent from \"../components/DetailsTableComponent\";\r\n\r\nexport default class DetailsPageContainer extends React.Component{\r\n\r\n    state = {\r\n        product: [],\r\n        productId: this.props.match.params.productId\r\n    }\r\n\r\n    componentDidMount() {\r\n        SearchServices.findProductById(this.state.productId)\r\n            .then(actualProduct => this.setState({\r\n                product: actualProduct\r\n            }))\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar fixed-top navbar-dark bg-dark\">\r\n                    <div>\r\n                        <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                            <li>\r\n                                <Link className=\"nav-link detailsPageSearchLink\" to=\"/search\">Back To Search</Link>\r\n                            </li>\r\n                            <li>\r\n                                <h3 className=\"navbar-brand mr-auto searchPageHeader\">Details Page</h3>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <div>\r\n                    <DetailsTableComponent\r\n                        product={this.state.product}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport SearchCardComponent from \"./SearchCardComponent\";\r\n\r\nexport default class SearchGridComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table searchResultTable\">\r\n                    <thead className=\"searchResultHeader\">\r\n                    <tr>\r\n                        <td>Search Results For \"{this.props.keyword}\"</td>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.products.map(product =>\r\n                            <div key={product.ASIN}\r\n                                 className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <SearchCardComponent\r\n                                    product={product}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SearchGridComponent from \"../components/SearchGridComponent\";\r\nimport SearchServices from \"../services/SearchServices\";\r\n\r\nexport default class SearchPageContainer extends React.Component {\r\n\r\n    state = {\r\n        keyword: '',\r\n        products: []\r\n    }\r\n\r\n    updateKeyWord = (newWord) =>\r\n        this.setState(prevState => ({\r\n            keyword: newWord\r\n        }))\r\n\r\n    searchProducts = (keyword) => {\r\n        SearchServices.findProductsByKeyWord(keyword)\r\n            .then(actualProducts =>\r\n                this.setState({\r\n                    products: actualProducts\r\n                }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Search Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li className=\"newCourseInput\">\r\n                                    <div className=\"input-group\">\r\n                                        <input className=\"form-control\"\r\n                                               placeholder=\"Keyword\"\r\n                                               onChange={(event) => this.updateKeyWord(event.target.value)}\r\n                                               value={this.state.keyword}/>\r\n                                        <div className=\"input-group-append\">\r\n                                                <button\r\n                                                    onClick={() => this.searchProducts(this.state.keyword)}\r\n                                                    className=\"btn btn-primary\">\r\n                                                    Search\r\n                                                </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n\r\n                <div>\r\n                    <SearchGridComponent\r\n                        products={this.state.products}\r\n                        keyword={this.state.keyword}\r\n                        />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport SearchPageContainer from \"../containers/SearchPageContainer\";\r\n\r\nexport default class ApiClientComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SearchPageContainer/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nconst createSeller = () =>\r\n    fetch(`http://localhost:8080/api/sellers`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const fetchSellerProfile = (username, password) =>\r\n    fetch(`http://localhost:8080/api/profile/seller`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(username, password),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n        .catch(e => {\r\n            this.props.history.push(\"/login\")\r\n        })\r\n        .then(currentUser => {\r\n            if(currentUser)\r\n                this.props.history.push(\"/profile\")\r\n        })\r\n\r\nconst createListing = (sid, listing) =>\r\n    fetch(`http://localhost:8080//api/sellers/${sid}/listings`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(listing),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst deleteListing = (lid) =>\r\n    fetch(`http://localhost:8080/api/listings/${lid}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst updateListing = (lid, updateListing) =>\r\n    fetch(`http://localhost:8080/api/listings/${lid}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updateListing),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst findListingsForSeller = (sid) =>\r\n    fetch(`http://localhost:8080/api/sellers/${sid}/listings`)\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    createSeller,\r\n    fetchSellerProfile,\r\n    createListing,\r\n    deleteListing,\r\n    updateListing,\r\n    findListingsForSeller,\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SellerServices from \"../services/SellerServices\";\r\nimport UserServices from \"../services/UserServices\";\r\n\r\n\r\nexport default class LoginComponent extends React.Component{\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        error: ''\r\n    }\r\n\r\n    updateUsername = (newWord) =>\r\n        this.setState(prevState => ({\r\n            username: newWord\r\n        }))\r\n\r\n    updatePassword = (newWord) =>\r\n        this.setState(prevState => ({\r\n            password: newWord\r\n        }))\r\n\r\n\r\n    login = () => {\r\n        UserServices.login(this.state.username, this.state.password)\r\n            .catch(e => {\r\n                this.setState({\r\n                    error: 'Invalid Login Attempt'\r\n                })\r\n            })\r\n            .then(currentUser => {\r\n                if(currentUser)\r\n                    this.props.history.push(\"/profile\")\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Login Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                {\r\n                    this.state.error &&\r\n                    <div className=\"alert alert-danger loginError\">\r\n                        {this.state.error}\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <div className=\"form-group loginPage\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input onChange={(e) => this.updateUsername(e.target.value)}\r\n                            type=\"email\" className=\"form-control\" id=\"username\"\r\n                               aria-describedby=\"emailHelp\" placeholder=\"Enter Username\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={(e) => this.updatePassword(e.target.value)}\r\n                            type=\"password\" className=\"form-control\" id=\"password\"\r\n                               placeholder=\"Enter Password\"/>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\"\r\n                            onClick={() => this.login()}>\r\n                        Login</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","const createBuyer = () =>\r\n    fetch(`http://localhost:8080/api/buyers`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    createBuyer\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserServices from \"../services/UserServices\";\r\nimport SellerServices from \"../services/SellerServices\";\r\nimport BuyerServices from \"../services/BuyerServices\";\r\nimport StoreServices from \"../services/StoreServices\";\r\nimport CartServices from \"../services/CartServices\";\r\n\r\n\r\nexport default class RegisterComponent extends React.Component{\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        userType: '',\r\n        user: '',\r\n        error: null\r\n    }\r\n\r\n    updateUsername = (newWord) =>\r\n        this.setState(prevState => ({\r\n            username: newWord\r\n        }))\r\n\r\n    updatePassword = (newWord) =>\r\n        this.setState(prevState => ({\r\n            password: newWord\r\n        }))\r\n\r\n    updateType = (newType) => {\r\n        this.setState({\r\n            userType: newType\r\n        })\r\n    }\r\n\r\n    assignUser (userType) {\r\n        if (userType === 'buyer') {\r\n            BuyerServices.createBuyer().catch((e) => console.log(e))\r\n        } else {\r\n            if (userType === 'seller') {\r\n                SellerServices.createSeller().catch((e) => console.log(e))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    register = () => {\r\n        UserServices.register(this.state.username, this.state.password, this.state.userType)\r\n            .catch(e => {\r\n                this.setState({\r\n                    error: 'Unable to register'\r\n                })\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({\r\n                        user: currentUser\r\n                    })\r\n                    this.assignUser(this.state.userType)\r\n                    this.props.history.push(\"/profile\")\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Register Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                {\r\n                    this.state.error &&\r\n                    <div className=\"alert alert-danger\">\r\n                        {this.state.error}\r\n                    </div>\r\n                }\r\n                <div className=\"input-group loginPage\">\r\n                    <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\r\n                        Username </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Enter Username\"\r\n                               onChange={(event) => this.updateUsername(event.target.value)}\r\n                               value={this.state.username}/>\r\n                    </div>\r\n                    <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\r\n                        Password </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Enter Password\"\r\n                               onChange={(event) => this.updatePassword(event.target.value)}\r\n                               value={this.state.password}/>\r\n                    </div>\r\n                    <label htmlFor=\"accountType\" className=\"col-sm-2 col-form-label\">\r\n                        Account Type </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Enter Buyer or Seller\"\r\n                               onChange={(event) => this.updateType(event.target.value)}\r\n                               value={this.state.userType}/>\r\n                    </div>\r\n                    <div className=\"col-sm-10\">\r\n                        <button\r\n                            onClick={() => this.register()}\r\n                            className=\"btn btn-primary\">\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserServices from \"../services/UserServices\";\r\n\r\nexport default class ProfileComponent extends React.Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        userType: '',\r\n        currentUser: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserServices.fetchProfile()\r\n            .catch(e => {})\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.setState({currentUser: currentUser})\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevState.currentUser !== this.state.currentUser) {\r\n            this.setState({\r\n                currentUser: this.state.currentUser\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    updateUsername = (newWord) =>\r\n        this.setState(prevState => ({\r\n            username: newWord\r\n        }))\r\n\r\n    updatePassword = (newWord) =>\r\n        this.setState(prevState => ({\r\n            password: newWord\r\n        }))\r\n\r\n    updateFirstName = (newWord) =>\r\n        this.setState(prevState => ({\r\n            firstName: newWord\r\n        }))\r\n\r\n    updateLastName = (newWord) =>\r\n        this.setState(prevState => ({\r\n            lastName: newWord\r\n        }))\r\n\r\n    updateEmail = (newWord) =>\r\n        this.setState(prevState => ({\r\n            email: newWord\r\n        }))\r\n\r\n\r\n    updateType = (newWord) => {\r\n        this.setState({\r\n            userType: newWord\r\n        })\r\n    }\r\n\r\n    update = () =>\r\n        UserServices.updateUser(this.state.username, this.state.password, this.state.firstName, this.state.lastName,\r\n            this.state.email, this.state.userType, this.state.currentUser)\r\n\r\n    logout = () =>\r\n        UserServices.logout()\r\n            .then(response => this.props.history.push(\"/\"))\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Profile Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"input-group loginPage\">\r\n                    <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.username} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit Username\"\r\n                               onChange={(event) => this.updateUsername(event.target.value)}\r\n                               value={this.state.username}/>\r\n                    </div>\r\n                    <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.password} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit Password\"\r\n                               onChange={(event) => this.updatePassword(event.target.value)}\r\n                               value={this.state.password}/>\r\n                    </div>\r\n                    <label htmlFor=\"firstName\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.firstName} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit First Name\"\r\n                               onChange={(event) => this.updateFirstName(event.target.value)}\r\n                               value={this.state.firstName}/>\r\n                    </div>\r\n                    <label htmlFor=\"lastName\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.lastName} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit Last Name\"\r\n                               onChange={(event) => this.updateLastName(event.target.value)}\r\n                               value={this.state.lastName}/>\r\n                    </div>\r\n                    <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.email} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit Email\"\r\n                               onChange={(event) => this.updateEmail(event.target.value)}\r\n                               value={this.state.email}/>\r\n                    </div>\r\n                    <label htmlFor=\"accountType\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.userType} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit Account Type\"\r\n                               onChange={(event) => this.updateType(event.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-sm-10\">\r\n                        <button\r\n                            onClick={() => this.update()}\r\n                            className=\"btn btn-primary\">\r\n                            Update\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.logout()}\r\n                            className=\"btn btn-danger logoutBtn\">\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CartGridComponent from \"./CartGridComponent\";\r\n\r\nexport default class CartComponent extends React.Component {\r\n\r\n    state = {\r\n        listing: []\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Search Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div>\r\n                    <CartGridComponent\r\n                        listing={this.state.listing}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport ListingServices from \"../services/ListingServices\";\r\n\r\nexport default class StoreCardComponent extends React.Component {\r\n\r\n    state = {\r\n        listing: this.props.listing\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div>Category: {this.state.listing.l_category}</div>\r\n                    <div>Name: {this.state.listing.l_name}</div>\r\n                    <div>Price: {this.state.listing.l_price}</div>\r\n                    <div>Quantity: {this.state.listing.l_quantity}</div>\r\n                    <button\r\n                        onClick={() => this.props.deleteListing(this.state.listing)}\r\n                        className=\"btn btn-primary btn-sm\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import StoreCardComponent from \"./StoreCardComponent\";\r\nimport  React from \"react\";\r\n\r\nexport default class CartGridComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table searchResultTable\">\r\n                    <thead className=\"searchResultHeader\">\r\n                    <tr>\r\n                        <td>Current Store</td>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.listings.map(listing =>\r\n                            <div key={listing.id}\r\n                                 className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <StoreCardComponent\r\n                                    listing={listing}\r\n                                    deleteListing={this.deleteListing}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ListingServices from \"../services/ListingServices\";\r\nimport StoreGridComponent from \"./StoreGridComponent\";\r\nimport UserServices from \"../services/UserServices\";\r\n\r\nexport default class StoreComponent extends React.Component {\r\n    \r\n    state = {\r\n        l_category: '',\r\n        l_name: '',\r\n        l_price: '',\r\n        l_quantity: '',\r\n        listings: [],\r\n        currentUser: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserServices.fetchProfile()\r\n            .catch(e => {})\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.setState({currentUser: currentUser})\r\n                }\r\n            })\r\n        ListingServices.findAllListingsByCategory(this.state.category)\r\n            .then(listings => this.setState({\r\n                listings: listings\r\n            }))\r\n    }\r\n\r\n    deleteListing = (listingToDelete) =>\r\n        ListingServices.deleteListing(listingToDelete)\r\n            .then(status => this.setState((prevState) => ({\r\n                    listings: prevState.listings.filter(listing =>\r\n                        listing !== listingToDelete\r\n                    )\r\n                })\r\n            ))\r\n\r\n    updatel_category = (newWord) =>\r\n        this.setState(prevState => ({\r\n            l_category: newWord\r\n        }))\r\n\r\n    updatel_name = (newWord) =>\r\n        this.setState(prevState => ({\r\n            l_name: newWord\r\n        }))\r\n\r\n    updatel_price = (newWord) =>\r\n        this.setState(prevState => ({\r\n            l_price: newWord\r\n        }))\r\n\r\n    updatel_quantity = (newWord) =>\r\n        this.setState(prevState => ({\r\n            l_quantity: newWord\r\n        }))\r\n\r\n    createListing = () =>\r\n        ListingServices.createListing(this.state.l_category, this.state.l_name, this.state.l_price, this.state.l_quantity)\r\n            .catch(e => {\r\n                console.log(e)\r\n            }).then(listing =>\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        listings: [\r\n                            ...prevState.listings,\r\n                            listing]\r\n                    }\r\n                }))\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Store Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"input-group loginPage\">\r\n                    <label htmlFor=\"l_category\" className=\"col-sm-2 col-form-label\">\r\n                        Enter Category </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=''\r\n                               onChange={(event) => this.updatel_category(event.target.value)}\r\n                               value={this.state.l_category}/>\r\n                    </div>\r\n                    <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\r\n                        Enter Name </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=''\r\n                               onChange={(event) => this.updatel_name(event.target.value)}\r\n                               value={this.state.l_name}/>\r\n                    </div>\r\n                    <label htmlFor=\"l_price\" className=\"col-sm-2 col-form-label\">\r\n                        Enter Price </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=''\r\n                               onChange={(event) => this.updatel_price(event.target.value)}\r\n                               value={this.state.l_price}/>\r\n                    </div>\r\n                    <label htmlFor=\"l_quantity\" className=\"col-sm-2 col-form-label\">\r\n                        Enter Quantity </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=''\r\n                               onChange={(event) => this.updatel_quantity(event.target.value)}\r\n                               value={this.state.l_quantity}/>\r\n                    </div>\r\n                    <div className=\"col-sm-10\">\r\n                        <button\r\n                            onClick={() => this.createListing()}\r\n                            className=\"btn btn-primary\">\r\n                            Create Listing\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <StoreGridComponent\r\n                    listings={this.state.listings}\r\n                    deleteListing={this.deleteListing}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport HomeComponent from \"./HomeComponent\";\r\nimport DetailsPageContainer from \"../containers/DetailsPageContainer\";\r\nimport ApiClientComponent from \"./ApiClientComponent\";\r\nimport ListingsPageContainer from \"../containers/ListingsPageContainer\";\r\nimport LoginComponent from \"./LoginComponent\";\r\nimport RegisterComponent from \"./RegisterComponet\";\r\nimport ProfileComponent from \"./ProfileComponent\";\r\nimport CartComponent from \"./CartComponent\";\r\nimport StoreComponent from \"./StoreComponent\";\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div>\r\n\r\n                    <Route\r\n                        path='/store'\r\n                        exact={true}\r\n                        component={StoreComponent}/>\r\n\r\n                    <Route\r\n                        path='/cart'\r\n                        exact={true}\r\n                        component={CartComponent}/>\r\n\r\n                    <Route\r\n                        path='/profile'\r\n                        exact={true}\r\n                        component={ProfileComponent}/>\r\n\r\n                    <Route\r\n                        path='/login'\r\n                        exact={true}\r\n                        component={LoginComponent}/>\r\n\r\n                    <Route\r\n                        path='/register'\r\n                        exact={true}\r\n                        component={RegisterComponent}/>\r\n\r\n\r\n                    <Route\r\n                        path='/listings'\r\n                        exact={true}\r\n                        component={ListingsPageContainer}/>\r\n\r\n                    <Route\r\n                        path='/:category/listings'\r\n                        exact={true}\r\n                        component={ListingsPageContainer}/>\r\n\r\n                    <Route\r\n                        path='/'\r\n                        exact={true}\r\n                        component={HomeComponent}/>\r\n\r\n                    <Route\r\n                        path='/search'\r\n                        exact={true}\r\n                        component={ApiClientComponent}/>\r\n\r\n                    <Route\r\n                        path='/search/:keyword'\r\n                        exact={true}\r\n                        component={ApiClientComponent}/>\r\n\r\n                    <Route exact={true}\r\n                           path='/details'\r\n                           component={DetailsPageContainer}/>\r\n\r\n                    <Route\r\n                        path='/details/:productId'\r\n                        component={DetailsPageContainer}/>\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\nimport logo from './logo.svg';\n// import './App.css';\nimport HomePage from \"./components/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}