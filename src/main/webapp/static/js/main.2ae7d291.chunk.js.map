{"version":3,"sources":["logo.svg","services/UserServices.js","components/CartCardComponent.js","components/CartGridComponent.js","components/ListingsCardComponent.js","components/ListingsGridComponent.js","services/ListingServices.js","containers/ListingsPageContainer.js","components/HomeGridComponent.js","components/HomeComponent.js","services/SearchServices.js","components/DetailsRowComponent.js","components/SearchCardComponent.js","components/DetailsTableComponent.js","containers/DetailsPageContainer.js","components/SearchGridComponent.js","containers/SearchPageContainer.js","components/ApiClientComponent.js","services/SellerServices.js","components/LoginComponent.js","services/BuyerServices.js","services/StoreServices.js","services/CartServices.js","components/RegisterComponet.js","components/ProfileComponent.js","components/CartComponent.js","components/StoreCardComponent.js","components/StoreGridComponent.js","components/StoreComponent.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","username","password","userType","fetch","body","JSON","stringify","headers","method","credentials","then","response","json","catch","fname","lname","email","currentUser","id","f_name","l_name","CartCardComponent","state","listing","props","className","this","l_category","l_price","l_quantity","onClick","deleteListing","React","Component","CartGridComponent","map","key","ListingsCardComponent","e","console","log","target","ListingsGridComponent","category","listings","name","price","quantity","ListingsPageContainer","match","params","ListingServices","setState","prevProps","prevState","snapshot","layout","styles","display","style","flexDirection","to","HomeGridComponent","HomeComponent","UserServices","keyword","productId","DetailsRowComponent","product","src","imageUrl","title","rating","totalReviews","href","detailPageURL","SearchCardComponent","ASIN","DetailsTableComponent","DetailsPageContainer","SearchServices","actualProduct","SearchGridComponent","products","SearchPageContainer","updateKeyWord","newWord","searchProducts","actualProducts","placeholder","onChange","event","value","ApiClientComponent","uid","LoginComponent","error","updateUsername","updatePassword","login","history","push","htmlFor","type","aria-describedby","sid","bid","RegisterComponent","user","seller","buyer","store","cart","updateType","newType","assignUserCart","CartServices","currentCart","assignUserStore","StoreServices","currentStore","assignUserType","BuyerServices","currentBuyer","SellerServices","currentSeller","register","ProfileComponent","firstName","lastName","updateFirstName","updateLastName","updateEmail","update","logout","CartComponent","StoreCardComponent","addListing","StoreComponent","listingToDelete","status","filter","updatel_category","updatel_name","updatel_price","updatel_quantity","createListing","HomePage","path","exact","component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2ae7d291.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const findUserById = (uid) =>\r\n    fetch(`http://localhost:8080/users/${uid}`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\nconst register = (username, password, userType) =>\r\n    fetch(\"http://localhost:8080/api/register\", {\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n            userType: userType\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\nconst login = (username, password) =>\r\n    fetch(\"http://localhost:8080/api/login\", {\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\nconst fetchProfile = () =>\r\n    fetch(`http://localhost:8080/api/profile`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\n\r\n\r\nconst logout = () =>\r\n    fetch(`http://localhost:8080/api/logout`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).catch(response => response.json())\r\n\r\nconst updateUser = (username, password, fname, lname, email, userType, currentUser) => {\r\n    fetch(`http://localhost:8080/api/profile/${currentUser.id}` , {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n            f_name: fname,\r\n            l_name: lname,\r\n            email: email,\r\n            userType: userType\r\n        }, currentUser),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n    findUserById,\r\n    register,\r\n    fetchProfile,\r\n    login,\r\n    logout,\r\n    updateUser\r\n}","import React from \"react\";\r\n\r\n\r\nexport default class CartCardComponent extends React.Component {\r\n\r\n    state = {\r\n        listing: this.props.listing\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div>Category: {this.state.listing.l_category}</div>\r\n                    <div>Name: {this.state.listing.l_name}</div>\r\n                    <div>Price: {this.state.listing.l_price}</div>\r\n                    <div>Quantity: {this.state.listing.l_quantity}</div>\r\n                    <button\r\n                        onClick={() => this.props.deleteListing(this.state.listing)}\r\n                        className=\"btn btn-primary btn-sm\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import CartCardComponent from \"./CartCardComponent\";\r\nimport  React from \"react\";\r\n\r\nexport default class CartGridComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table searchResultTable\">\r\n                    <thead className=\"searchResultHeader\">\r\n                    <tr>\r\n                        <td>Current Cart</td>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.listing.map(listing =>\r\n                            <div key={listing.id}\r\n                                 className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <CartCardComponent\r\n                                    listing={listing}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CartGridComponent from \"./CartGridComponent\";\r\n\r\nexport default class ListingsCardComponent extends React.Component {\r\n\r\n    state = {\r\n        listing: this.props.listing\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div>Category: {this.state.listing.l_category}</div>\r\n                    <div>Name: {this.state.listing.l_name}</div>\r\n                    <div>Price: {this.state.listing.l_price}</div>\r\n                    <div>Quantity: {this.state.listing.l_quantity}</div>\r\n                    <button\r\n                        onClick={(e) => console.log(e.target)}\r\n                        className=\"btn btn-primary btn-sm\">\r\n                        Add to Cart\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport ListingsCardComponent from \"./ListingsCardComponent\";\r\n\r\n\r\nexport default class ListingsGridComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table searchResultTable\">\r\n                    <thead className=\"searchResultHeader\">\r\n                    <tr>\r\n                        <td className=\"listingHeader\">{this.props.category} listings</td>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.listings.map(listing =>\r\n                            <div key={listing.id}\r\n                                 className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <ListingsCardComponent\r\n                                    listing={listing}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","const createListing = (category, name, price, quantity) =>\r\n    fetch(\"http://localhost:8080/api/listing\", {\r\n        body: JSON.stringify({\r\n            l_category: category,\r\n            l_name: name,\r\n            l_price: price,\r\n            l_quantity: quantity\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        method: 'POST'\r\n    }).then(response => response.json())\r\n\r\nconst findAllListingsByCategory = (category) =>\r\n    fetch(\"http://localhost:8080/api/listings/\" + category)\r\n        .then(response => response.json())\r\n\r\nconst deleteListing = (listing) =>\r\n    fetch(`http://localhost:8080/api/listings/${listing.id}` , {\r\n        method: 'DELETE'\r\n    }).then(response => response.json())\r\n\r\nconst findAllListings = () =>\r\n    fetch(\"http://localhost:8080/api/listings\").then(response => response.json())\r\n\r\nexport default {\r\n    createListing,\r\n    deleteListing,\r\n    findAllListingsByCategory,\r\n    findAllListings\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ListingsGridComponent from \"../components/ListingsGridComponent\";\r\nimport ListingServices from \"../services/ListingServices\";\r\n\r\n\r\n\r\nexport default class ListingsPageContainer extends React.Component {\r\n\r\n    state = {\r\n        listings: [],\r\n        category: this.props.match.params.category,\r\n    }\r\n\r\n    componentDidMount() {\r\n        ListingServices.findAllListingsByCategory(this.state.category)\r\n            .then(listings => this.setState({\r\n                listings: listings\r\n            }))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.match.params.category !== this.props.match.params.category) {\r\n            this.setState({\r\n                layout: this.props.match.params.category\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"listingPageHead\">\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Listings Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <li>\r\n                                <Link className=\"nav-link listingSearch\" to=\"/search\">Search</Link>\r\n                            </li>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <ListingsGridComponent\r\n                        category={this.state.category}\r\n                        listings={this.state.listings}/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport ListingServices from \"../services/ListingServices\";\r\nimport ListingsCardComponent from \"./ListingsCardComponent\";\r\n\r\n\r\nexport default class HomeGridComponent extends React.Component{\r\n    state = {\r\n        listings: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        ListingServices.findAllListings()\r\n            .then(listings => this.setState({\r\n                listings: listings\r\n            }))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <table className=\"table  homeGrid\">\r\n                    <thead className=\"searchResultHeader\">\r\n                    <tr>\r\n                        <td className=\"listingHeader\">Listings</td>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.state.listings.map(listing =>\r\n                            <div key={listing.id}\r\n                                 className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <ListingsCardComponent\r\n                                    listing={listing}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserServices from \"../services/UserServices\";\r\nimport ListingsPageContainer from \"../containers/ListingsPageContainer\";\r\nimport HomeGridComponent from \"./HomeGridComponent\";\r\n\r\nexport default class HomeComponent extends React.Component {\r\n\r\n    state = {\r\n        currentUser: {\r\n            username: '',\r\n            userType: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserServices.fetchProfile()\r\n            .catch(e => {})\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.setState({currentUser: currentUser})\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <nav className=\"navbar fixed-top navbar-dark bg-dark\">\r\n                        <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                            <li>\r\n                                <Link className=\"nav-link homeLogin\" to=\"/login\">Login</Link>\r\n                            </li>\r\n                            <li className=\"loginDivider\">/</li>\r\n                            <li>\r\n                                <Link className=\"nav-link homeRegister\" to=\"/register\">Register</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"navbar-brand mx-auto mainTitle\">\r\n                            <h3>Student MarketPlace</h3>\r\n                        </div>\r\n                        {\r\n                            this.state.currentUser.username &&\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link homeSearch\" to=\"/profile\">Profile</Link>\r\n                                </li>\r\n                                {\r\n                                    this.state.currentUser.userType === 'seller' &&\r\n                                    <li className=\"profileDivider\">/</li>\r\n                                }\r\n                                {\r\n                                    this.state.currentUser.userType === 'seller' &&\r\n                                        <li>\r\n                                            <Link className=\"nav-link homeStore\" to=\"/store\">Store</Link>\r\n                                        </li>\r\n\r\n                                }\r\n                                {\r\n                                    this.state.currentUser.userType === 'buyer' &&\r\n                                    <li className=\"profileDivider\">/</li>\r\n                                }\r\n                                {\r\n                                    this.state.currentUser.userType === 'buyer' &&\r\n                                    <li>\r\n                                        <Link className=\"nav-link homeRegister\" to=\"/cart\">Cart</Link>\r\n                                    </li>\r\n                                }\r\n                            </ul>\r\n                        }\r\n                    </nav>\r\n                </div>\r\n                <div>\r\n                    <nav className=\"navbar navbar-dark bg-secondary homePageNav\">\r\n                        <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                            <li>\r\n                                <h3 className=\"homeCategory\">Categories</h3>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"nav-link homeLink\" to=\"/products/listings\">Products</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"nav-link homeLink\" to=\"/books/listings\">Books</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"nav-link homeLink\" to=\"/services/listings\">Services</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"nav-link homeLink\" to=\"/housing/listings\">Housing</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar nav ml-auto\">\r\n                            <li>\r\n                                <Link className=\"nav-link homeSearchLink\" to=\"/search\">Search</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                <div>\r\n                    <HomeGridComponent/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","\r\nconst findProductsByKeyWord = (keyword) =>\r\n    fetch(\"https://amazon-price1.p.rapidapi.com/search?keywords=\" + keyword + \"&marketplace=US\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-host\": \"amazon-price1.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"7928a2dcbfmsh5d89e8852c7289fp10f848jsnf45f27536d87\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst findProductById = (productId) =>\r\n    fetch(\"https://amazon-price1.p.rapidapi.com/search?keywords=\" + productId + \"&marketplace=US\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-host\": \"amazon-price1.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"7928a2dcbfmsh5d89e8852c7289fp10f848jsnf45f27536d87\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    findProductsByKeyWord,\r\n    findProductById\r\n}","import React from \"react\";\r\n\r\nexport default class DetailsRowComponent extends React.Component {\r\n\r\n    state = {\r\n        product: this.props.product\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n           <tr className=\"detailsRow\">\r\n               <td><img className=\"card-img-top\" src={this.state.product.imageUrl}/></td>\r\n               <td>{this.state.product.title}</td>\r\n               <td>{this.state.product.price}</td>\r\n               <td>{this.state.product.rating}</td>\r\n               <td>{this.state.product.totalReviews}</td>\r\n               <td><a href={`${this.state.product.detailPageURL}`}>Link</a></td>\r\n           </tr>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class SearchCardComponent extends React.Component {\r\n\r\n    state = {\r\n        product: this.props.product\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\">\r\n                <img className=\"card-img-top\" src={this.state.product.imageUrl}/>\r\n                <div className=\"card-body\">\r\n                    <div>{this.state.product.title}</div>\r\n                    <div>{this.state.product.price}</div>\r\n                    <Link to={`/details/${this.state.product.ASIN}`}>\r\n                    <button\r\n                        className=\"btn btn-primary btn-sm\">\r\n                        More Details\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport DetailsRowComponent from \"./DetailsRowComponent\";\r\nimport SearchCardComponent from \"./SearchCardComponent\";\r\n\r\nexport default class DetailsTableComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table detailsTable\">\r\n                    <thead className=\"detailsTableHeader\">\r\n                        <tr>\r\n                            <td>Image</td>\r\n                            <td>Title</td>\r\n                            <td>Price</td>\r\n                            <td>Rating</td>\r\n                            <td>Total Reviews</td>\r\n                            <td>Link To Product</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.props.product.map(product =>\r\n                                <DetailsRowComponent\r\n                                    product={product}\r\n                                    key={this.props.product.ASIN}\r\n                                />\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport SearchServices from \"../services/SearchServices\";\r\nimport {Link} from \"react-router-dom\";\r\nimport DetailsTableComponent from \"../components/DetailsTableComponent\";\r\n\r\nexport default class DetailsPageContainer extends React.Component{\r\n\r\n    state = {\r\n        product: [],\r\n        productId: this.props.match.params.productId\r\n    }\r\n\r\n    componentDidMount() {\r\n        SearchServices.findProductById(this.state.productId)\r\n            .then(actualProduct => this.setState({\r\n                product: actualProduct\r\n            }))\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar fixed-top navbar-dark bg-dark\">\r\n                    <div>\r\n                        <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                            <li>\r\n                                <Link className=\"nav-link detailsPageSearchLink\" to=\"/search\">Back To Search</Link>\r\n                            </li>\r\n                            <li>\r\n                                <h3 className=\"navbar-brand mr-auto searchPageHeader\">Details Page</h3>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <div>\r\n                    <DetailsTableComponent\r\n                        product={this.state.product}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport SearchCardComponent from \"./SearchCardComponent\";\r\n\r\nexport default class SearchGridComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table searchResultTable\">\r\n                    <thead className=\"searchResultHeader\">\r\n                    <tr>\r\n                        <td>Search Results For \"{this.props.keyword}\"</td>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.products.map(product =>\r\n                            <div key={product.ASIN}\r\n                                 className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <SearchCardComponent\r\n                                    product={product}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SearchGridComponent from \"../components/SearchGridComponent\";\r\nimport SearchServices from \"../services/SearchServices\";\r\n\r\nexport default class SearchPageContainer extends React.Component {\r\n\r\n    state = {\r\n        keyword: '',\r\n        products: []\r\n    }\r\n\r\n    updateKeyWord = (newWord) =>\r\n        this.setState(prevState => ({\r\n            keyword: newWord\r\n        }))\r\n\r\n    searchProducts = (keyword) => {\r\n        SearchServices.findProductsByKeyWord(keyword)\r\n            .then(actualProducts =>\r\n                this.setState({\r\n                    products: actualProducts\r\n                }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Search Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li className=\"newCourseInput\">\r\n                                    <div className=\"input-group\">\r\n                                        <input className=\"form-control\"\r\n                                               placeholder=\"Keyword\"\r\n                                               onChange={(event) => this.updateKeyWord(event.target.value)}\r\n                                               value={this.state.keyword}/>\r\n                                        <div className=\"input-group-append\">\r\n                                                <button\r\n                                                    onClick={() => this.searchProducts(this.state.keyword)}\r\n                                                    className=\"btn btn-primary\">\r\n                                                    Search\r\n                                                </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n\r\n                <div>\r\n                    <SearchGridComponent\r\n                        products={this.state.products}\r\n                        keyword={this.state.keyword}\r\n                        />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport SearchPageContainer from \"../containers/SearchPageContainer\";\r\n\r\nexport default class ApiClientComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SearchPageContainer/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nconst createSeller = (uid) =>\r\n    fetch(`http://localhost:8080/api/sellers/register`, {\r\n        body: JSON.stringify({\r\n            id: uid\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst fetchSeller = () =>\r\n    fetch(`http://localhost:8080/api/seller`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\nconst createListing = (sid, listing) =>\r\n    fetch(`http://localhost:8080//api/sellers/${sid}/listings`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(listing),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst deleteListing = (lid) =>\r\n    fetch(`http://localhost:8080/api/listings/${lid}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst updateListing = (lid, updateListing) =>\r\n    fetch(`http://localhost:8080/api/listings/${lid}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updateListing),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst findListingsForSeller = (sid) =>\r\n    fetch(`http://localhost:8080/api/sellers/${sid}/listings`)\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    createSeller,\r\n    fetchSeller,\r\n    createListing,\r\n    deleteListing,\r\n    updateListing,\r\n    findListingsForSeller,\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SellerServices from \"../services/SellerServices\";\r\nimport UserServices from \"../services/UserServices\";\r\n\r\n\r\nexport default class LoginComponent extends React.Component{\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        error: ''\r\n    }\r\n\r\n    updateUsername = (newWord) =>\r\n        this.setState(prevState => ({\r\n            username: newWord\r\n        }))\r\n\r\n    updatePassword = (newWord) =>\r\n        this.setState(prevState => ({\r\n            password: newWord\r\n        }))\r\n\r\n\r\n    login = () => {\r\n        UserServices.login(this.state.username, this.state.password)\r\n            .catch(e => {\r\n                this.setState({\r\n                    error: 'Invalid Login Attempt'\r\n                })\r\n            })\r\n            .then(currentUser => {\r\n                if(currentUser)\r\n                    this.props.history.push(\"/profile\")\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Login Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                {\r\n                    this.state.error &&\r\n                    <div className=\"alert alert-danger loginError\">\r\n                        {this.state.error}\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <div className=\"form-group loginPage\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input onChange={(e) => this.updateUsername(e.target.value)}\r\n                            type=\"email\" className=\"form-control\" id=\"username\"\r\n                               aria-describedby=\"emailHelp\" placeholder=\"Enter Username\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={(e) => this.updatePassword(e.target.value)}\r\n                            type=\"password\" className=\"form-control\" id=\"password\"\r\n                               placeholder=\"Enter Password\"/>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\"\r\n                            onClick={() => this.login()}>\r\n                        Login</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","const createBuyer = (uid) =>\r\n    fetch(`http://localhost:8080/api/buyers/register`, {\r\n        body: JSON.stringify({\r\n            id: uid\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    createBuyer\r\n}","const createStore = (sid) =>\r\n    fetch(`http://localhost:8080/api/${sid}/stores`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst fetchStore = () =>\r\n    fetch(`http://localhost:8080/api/store`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).then(response => response.json())\r\n\r\nconst findAllStoreListings = () =>\r\n    fetch(\"http://localhost:8080/api/store/listings\").then(response => response.json())\r\n\r\nconst addToStore = (category, name, price, quantity, sid) =>\r\n    fetch(`http://localhost:8080/api/${sid}/stores`, {\r\n        body: JSON.stringify({\r\n            l_category: category,\r\n            l_name: name,\r\n            l_price: price,\r\n            l_quantity: quantity\r\n        }),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        method: 'POST'\r\n    }).then(response => response.json())\r\n\r\n\r\nexport default {\r\n    createStore,\r\n    fetchStore,\r\n    findAllStoreListings\r\n}","const createCart = (bid) =>\r\n    fetch(`http://localhost:8080/api/${bid}/carts`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    createCart\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserServices from \"../services/UserServices\";\r\nimport SellerServices from \"../services/SellerServices\";\r\nimport BuyerServices from \"../services/BuyerServices\";\r\nimport StoreServices from \"../services/StoreServices\";\r\nimport CartServices from \"../services/CartServices\";\r\n\r\n\r\nexport default class RegisterComponent extends React.Component{\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        userType: '',\r\n        user: '',\r\n        seller: '',\r\n        buyer: '',\r\n        store: '',\r\n        cart: '',\r\n        error: null\r\n    }\r\n\r\n    updateUsername = (newWord) =>\r\n        this.setState(prevState => ({\r\n            username: newWord\r\n        }))\r\n\r\n    updatePassword = (newWord) =>\r\n        this.setState(prevState => ({\r\n            password: newWord\r\n        }))\r\n\r\n    updateType = (newType) => {\r\n        this.setState({\r\n            userType: newType\r\n        })\r\n    }\r\n\r\n    assignUserCart = (bid) => {\r\n        CartServices.createCart(bid)\r\n            .catch((e) => console.log(e))\r\n            .then(currentCart => {\r\n                this.setState({\r\n                    seller: currentCart\r\n                })\r\n            })\r\n    }\r\n\r\n    assignUserStore = (sid) => {\r\n        StoreServices.createStore(sid)\r\n            .catch((e) => console.log(e))\r\n            .then(currentStore => {\r\n                this.setState({\r\n                    seller: currentStore\r\n                })\r\n        })\r\n    }\r\n\r\n    assignUserType = (userType, uid) => {\r\n        if (userType === 'buyer') {\r\n            BuyerServices.createBuyer(uid).catch((e) => console.log(e))\r\n                .then(currentBuyer => {\r\n                    this.setState({\r\n                        buyer: currentBuyer\r\n                    })\r\n                    this.assignUserCart(currentBuyer.id)\r\n                    this.props.history.push(\"/profile\")\r\n                })\r\n        } else {\r\n            if (userType === 'seller') {\r\n                SellerServices.createSeller(uid).catch((e) => console.log(e))\r\n                    .then(currentSeller => {\r\n                        this.setState({\r\n                            seller: currentSeller\r\n                        })\r\n                        this.assignUserStore(currentSeller.id)\r\n                        this.props.history.push(\"/profile\")\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    register = () => {\r\n        UserServices.register(this.state.username, this.state.password, this.state.userType)\r\n            .catch(e => {\r\n                this.setState({\r\n                    error: 'Unable to register'\r\n                })\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({\r\n                        user: currentUser\r\n                    })\r\n                    this.assignUserType(this.state.userType, currentUser.id)\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Register Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                {\r\n                    this.state.error &&\r\n                    <div className=\"alert alert-danger\">\r\n                        {this.state.error}\r\n                    </div>\r\n                }\r\n                <div className=\"input-group loginPage\">\r\n                    <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\r\n                        Username </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Enter Username\"\r\n                               onChange={(event) => this.updateUsername(event.target.value)}\r\n                               value={this.state.username}/>\r\n                    </div>\r\n                    <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\r\n                        Password </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Enter Password\"\r\n                               onChange={(event) => this.updatePassword(event.target.value)}\r\n                               value={this.state.password}/>\r\n                    </div>\r\n                    <label htmlFor=\"accountType\" className=\"col-sm-2 col-form-label\">\r\n                        Account Type </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Enter Buyer or Seller\"\r\n                               onChange={(event) => this.updateType(event.target.value)}\r\n                               value={this.state.userType}/>\r\n                    </div>\r\n                    <div className=\"col-sm-10\">\r\n                        <button\r\n                            onClick={() => this.register()}\r\n                            className=\"btn btn-primary\">\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserServices from \"../services/UserServices\";\r\n\r\nexport default class ProfileComponent extends React.Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        userType: '',\r\n        currentUser: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserServices.fetchProfile()\r\n            .catch(e => {})\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.setState({currentUser: currentUser})\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevState.currentUser !== this.state.currentUser) {\r\n            this.setState({\r\n                currentUser: this.state.currentUser\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    updateUsername = (newWord) =>\r\n        this.setState(prevState => ({\r\n            username: newWord\r\n        }))\r\n\r\n    updatePassword = (newWord) =>\r\n        this.setState(prevState => ({\r\n            password: newWord\r\n        }))\r\n\r\n    updateFirstName = (newWord) =>\r\n        this.setState(prevState => ({\r\n            firstName: newWord\r\n        }))\r\n\r\n    updateLastName = (newWord) =>\r\n        this.setState(prevState => ({\r\n            lastName: newWord\r\n        }))\r\n\r\n    updateEmail = (newWord) =>\r\n        this.setState(prevState => ({\r\n            email: newWord\r\n        }))\r\n\r\n\r\n    updateType = (newWord) => {\r\n        this.setState({\r\n            userType: newWord\r\n        })\r\n    }\r\n\r\n    update = () =>\r\n        UserServices.updateUser(this.state.username, this.state.password, this.state.firstName, this.state.lastName,\r\n            this.state.email, this.state.userType, this.state.currentUser)\r\n\r\n    logout = () =>\r\n        UserServices.logout()\r\n            .then(response => this.props.history.push(\"/\"))\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Profile Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"input-group loginPage\">\r\n                    <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.username} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit Username\"\r\n                               onChange={(event) => this.updateUsername(event.target.value)}\r\n                               value={this.state.username}/>\r\n                    </div>\r\n                    <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.password} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit Password\"\r\n                               onChange={(event) => this.updatePassword(event.target.value)}\r\n                               value={this.state.password}/>\r\n                    </div>\r\n                    <label htmlFor=\"firstName\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.firstName} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit First Name\"\r\n                               onChange={(event) => this.updateFirstName(event.target.value)}\r\n                               value={this.state.firstName}/>\r\n                    </div>\r\n                    <label htmlFor=\"lastName\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.lastName} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit Last Name\"\r\n                               onChange={(event) => this.updateLastName(event.target.value)}\r\n                               value={this.state.lastName}/>\r\n                    </div>\r\n                    <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">\r\n                        {this.state.currentUser.email} </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=\"Edit Email\"\r\n                               onChange={(event) => this.updateEmail(event.target.value)}\r\n                               value={this.state.email}/>\r\n                    </div>\r\n                    <label htmlFor=\"accountType\" className=\"col-sm-2 col-form-label\">\r\n                        Account Type:</label>\r\n                    <div className=\"col-sm-10\">\r\n                        {this.state.currentUser.userType}\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-10\">\r\n                        <button\r\n                            onClick={() => this.update()}\r\n                            className=\"btn btn-primary\">\r\n                            Update\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.logout()}\r\n                            className=\"btn btn-danger logoutBtn\">\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CartGridComponent from \"./CartGridComponent\";\r\n\r\nexport default class CartComponent extends React.Component {\r\n\r\n    state = {\r\n        listing: []\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Cart Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div>\r\n                    <CartGridComponent\r\n                        listing={this.state.listing}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport ListingServices from \"../services/ListingServices\";\r\n\r\nexport default class StoreCardComponent extends React.Component {\r\n\r\n    state = {\r\n        listing: this.props.listing\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div>Category: {this.state.listing.l_category}</div>\r\n                    <div>Name: {this.state.listing.l_name}</div>\r\n                    <div>Price: {this.state.listing.l_price}</div>\r\n                    <div>Quantity: {this.state.listing.l_quantity}</div>\r\n                    <button\r\n                        onClick={() => this.props.addListing(this.state.listing)}\r\n                        className=\"btn btn-primary btn-sm\">\r\n                        Add\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import StoreCardComponent from \"./StoreCardComponent\";\r\nimport  React from \"react\";\r\n\r\nexport default class CartGridComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table searchResultTable\">\r\n                    <thead className=\"searchResultHeader\">\r\n                    <tr>\r\n                        <td>Current Store</td>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.listings.map(listing =>\r\n                            <div key={listing.id}\r\n                                 className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <StoreCardComponent\r\n                                    listing={listing}\r\n                                    deleteListing={this.deleteListing}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ListingServices from \"../services/ListingServices\";\r\nimport StoreGridComponent from \"./StoreGridComponent\";\r\nimport UserServices from \"../services/UserServices\";\r\nimport SellerServices from \"../services/SellerServices\";\r\nimport StoreServices from \"../services/StoreServices\";\r\n\r\nexport default class StoreComponent extends React.Component {\r\n    \r\n    state = {\r\n        l_category: '',\r\n        l_name: '',\r\n        l_price: '',\r\n        l_quantity: '',\r\n        listings: [],\r\n        currentUser: '',\r\n        currentSeller: '',\r\n        currentStore: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserServices.fetchProfile()\r\n            .catch(e => {})\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.setState({currentUser: currentUser})\r\n                }\r\n            })\r\n        SellerServices.fetchSeller()\r\n            .catch(e => {})\r\n            .then(currentSeller => {\r\n                if(currentSeller) {\r\n                    this.setState({currentSeller: currentSeller})\r\n                }\r\n            })\r\n        StoreServices.fetchStore()\r\n            .catch(e => {})\r\n            .then(currentStore => {\r\n                if(currentStore) {\r\n                    this.setState({currentSeller: currentStore})\r\n                }\r\n            })\r\n        StoreServices.findAllStoreListings()\r\n            .catch(e => {})\r\n            .then(listings => {\r\n                    this.setState({listings: listings})\r\n            })\r\n    }\r\n\r\n    deleteListing = (listingToDelete) =>\r\n        ListingServices.deleteListing(listingToDelete)\r\n            .then(status => this.setState((prevState) => ({\r\n                    listings: prevState.listings.filter(listing =>\r\n                        listing !== listingToDelete\r\n                    )\r\n                })\r\n            ))\r\n\r\n    // addListing = (this.state.l_category, this.state.l_name, this.state.l_price, this.state.l_quantity, )\r\n\r\n    updatel_category = (newWord) =>\r\n        this.setState(prevState => ({\r\n            l_category: newWord\r\n        }))\r\n\r\n    updatel_name = (newWord) =>\r\n        this.setState(prevState => ({\r\n            l_name: newWord\r\n        }))\r\n\r\n    updatel_price = (newWord) =>\r\n        this.setState(prevState => ({\r\n            l_price: newWord\r\n        }))\r\n\r\n    updatel_quantity = (newWord) =>\r\n        this.setState(prevState => ({\r\n            l_quantity: newWord\r\n        }))\r\n\r\n    createListing = () =>\r\n        ListingServices.createListing(this.state.l_category, this.state.l_name, this.state.l_price, this.state.l_quantity)\r\n            .catch(e => {\r\n                console.log(e)\r\n            }).then(listing =>\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        listings: [\r\n                            ...prevState.listings,\r\n                            listing]\r\n                    }\r\n                }))\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div styles={{display: 'inline-block'}}>\r\n                    <nav className=\"navbar  fixed-top navbar-dark bg-dark\">\r\n                        <div>\r\n                            <ul className=\"nav navbar-nav\" style={{flexDirection: 'row'}}>\r\n                                <li>\r\n                                    <Link className=\"nav-link searchPageHomeLink\" to=\"/\">Back To Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <h3 className=\"navbar-brand mr-auto searchPageHeader\">Store Page</h3>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"input-group loginPage\">\r\n                    <label htmlFor=\"l_category\" className=\"col-sm-2 col-form-label\">\r\n                        Enter Category </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=''\r\n                               onChange={(event) => this.updatel_category(event.target.value)}\r\n                               value={this.state.l_category}/>\r\n                    </div>\r\n                    <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\r\n                        Enter Name </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=''\r\n                               onChange={(event) => this.updatel_name(event.target.value)}\r\n                               value={this.state.l_name}/>\r\n                    </div>\r\n                    <label htmlFor=\"l_price\" className=\"col-sm-2 col-form-label\">\r\n                        Enter Price </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=''\r\n                               onChange={(event) => this.updatel_price(event.target.value)}\r\n                               value={this.state.l_price}/>\r\n                    </div>\r\n                    <label htmlFor=\"l_quantity\" className=\"col-sm-2 col-form-label\">\r\n                        Enter Quantity </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\"\r\n                               placeholder=''\r\n                               onChange={(event) => this.updatel_quantity(event.target.value)}\r\n                               value={this.state.l_quantity}/>\r\n                    </div>\r\n                    <div className=\"col-sm-10\">\r\n                        <button\r\n                            onClick={() => this.createListing()}\r\n                            className=\"btn btn-primary\">\r\n                            Create Listing\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <StoreGridComponent\r\n                    listings={this.state.listings}\r\n                    deleteListing={this.deleteListing}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport HomeComponent from \"./HomeComponent\";\r\nimport DetailsPageContainer from \"../containers/DetailsPageContainer\";\r\nimport ApiClientComponent from \"./ApiClientComponent\";\r\nimport ListingsPageContainer from \"../containers/ListingsPageContainer\";\r\nimport LoginComponent from \"./LoginComponent\";\r\nimport RegisterComponent from \"./RegisterComponet\";\r\nimport ProfileComponent from \"./ProfileComponent\";\r\nimport CartComponent from \"./CartComponent\";\r\nimport StoreComponent from \"./StoreComponent\";\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div>\r\n\r\n                    <Route\r\n                        path='/store'\r\n                        exact={true}\r\n                        component={StoreComponent}/>\r\n\r\n                    <Route\r\n                        path='/cart'\r\n                        exact={true}\r\n                        component={CartComponent}/>\r\n\r\n                    <Route\r\n                        path='/profile'\r\n                        exact={true}\r\n                        component={ProfileComponent}/>\r\n\r\n                    <Route\r\n                        path='/login'\r\n                        exact={true}\r\n                        component={LoginComponent}/>\r\n\r\n                    <Route\r\n                        path='/register'\r\n                        exact={true}\r\n                        component={RegisterComponent}/>\r\n\r\n\r\n                    <Route\r\n                        path='/listings'\r\n                        exact={true}\r\n                        component={ListingsPageContainer}/>\r\n\r\n                    <Route\r\n                        path='/:category/listings'\r\n                        exact={true}\r\n                        component={ListingsPageContainer}/>\r\n\r\n                    <Route\r\n                        path='/'\r\n                        exact={true}\r\n                        component={HomeComponent}/>\r\n\r\n                    <Route\r\n                        path='/search'\r\n                        exact={true}\r\n                        component={ApiClientComponent}/>\r\n\r\n                    <Route\r\n                        path='/search/:keyword'\r\n                        exact={true}\r\n                        component={ApiClientComponent}/>\r\n\r\n                    <Route exact={true}\r\n                           path='/details'\r\n                           component={DetailsPageContainer}/>\r\n\r\n                    <Route\r\n                        path='/details/:productId'\r\n                        component={DetailsPageContainer}/>\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\nimport logo from './logo.svg';\n// import './App.css';\nimport HomePage from \"./components/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}